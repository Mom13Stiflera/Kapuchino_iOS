import SwiftUI
import UserNotifications

@main
struct Kapuchino_iOSApp: App {
    @StateObject private var notificationManager = NotificationManager()
    
    var body: some Scene {
        WindowGroup {
            ContentView()
                .environmentObject(notificationManager)
                .onAppear {
                    notificationManager.requestPermission()
                }
        }
    }
}

class NotificationManager: ObservableObject {
    @Published var isAuthorized = false
    
    func requestPermission() {
        UNUserNotificationCenter.current().requestAuthorization(options: [.alert, .badge, .sound]) { granted, error in
            DispatchQueue.main.async {
                self.isAuthorized = granted
            }
            if granted {
                self.scheduleNotifications()
            }
        }
    }
    
    func scheduleNotifications() {
        let content = UNMutableNotificationContent()
        content.title = "‚òï Kapuchino"
        content.body = "–ì–æ—Å–ø–æ–∂–∞, –Ω–µ –∑–∞–±—É–¥—å –∫–∞–ø—É—á–∏–Ω–æ —Å –∫–æ—Ä–∏—Ü–µ–π! ‚òïÔ∏è üí∞"
        content.sound = .default
        
        // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–µ—Ç–≤–µ—Ä–≥–∞ –≤ 9:00
        var dateComponents = DateComponents()
        dateComponents.weekday = 5 // –ß–µ—Ç–≤–µ—Ä–≥
        dateComponents.hour = 9
        dateComponents.minute = 0
        
        let trigger = UNCalendarNotificationTrigger(dateMatching: dateComponents, repeats: true)
        let request = UNNotificationRequest(identifier: "kapuchino_reminder", content: content, trigger: trigger)
        
        UNUserNotificationCenter.current().add(request)
    }
}
